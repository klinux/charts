nameOverride: ""
fullnameOverride: ""

# Postgresql Database configuration
# We do not recommend to use this configuration for production environment.
postgresql:
  enabled: true
  auth:
    postgresPassword: hoppscotch
    username: hoppscotch
    password: hoppscotch
    database: hoppscotch
  primary:
    resources: {}
    affinity: {}
    nodeSelector: {}
    tolerations: []
    persistence:
      enabled: true
      size: 10Gi
      storageClass: ""
      annotations: {}
      labels: {}

# External Database configuration
# Configure the database for production environment.
database:
  enabled: false
  username: hoppscotch
  password: hoppscotch
  host: 127.0.0.1
  port: 5432
  database: hoppscotch

# Parameters configuration
parameters:
  # Security
  security:
    jwtSecret: ""
    sessionSecret: ""
    dataEncryptionKey: "" # 32 charsets
  # Configs
  config:
    refreshTokenValidity: "604800000"
    accessTokenValidity: "86400000"
    allowSecureToken: true
    enableSubPath: false
    rateLimit:
      ttl: 60 # In seconds
      max: 100 # Max requests per IP
  # Auth Providers
  auth:
    github:
      enabled: false
      clientId: ""
      clientSecret: ""
      scope: user:email
    google:
      enabled: false
      clientId: ""
      clientSecret: ""
      scope: user:email
    microsoft:
      enabled: false
      clientId: ""
      clientSecret: ""
      scope: user:email
  smtp:
    enabled: false
    mailFrom: "<no_reply@example.com>"
    host: localhost
    port: 25
    tlsSecure: false
    tlsRejectUnauthorized: false
    username: ""
    password: ""

# Parameters secrets (exists) configuration
# In case that you already has the secret configured.
parametersSecretName: ""

# Backend configuration
backend:
  replicaCount: 1

  image:
    repository: hoppscotch/hoppscotch-backend
    tag: 2024.12.0
    pullPolicy: IfNotPresent

  # Service configuration
  service:
    type: ClusterIP
    port: 80
    containerPort: 3170

  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths: ["/"]
    tls: []

  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

  # extra_labels:
  #   app: "postwoman"
  #   env: "staging"

frontend:
  replicaCount: 1

  image:
    repository: hoppscotch/hoppscotch-frontend
    tag: 2024.12.0
    pullPolicy: IfNotPresent

  # Service configuration
  service:
    type: ClusterIP
    port: 80
    containerPort: 3000

  ingress:
    enabled: false
    ingressClassName: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths: ["/"]
    tls: []

  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

  # extra_labels:
  #   app: "postwoman"
  #   env: "staging"

admin:
  replicaCount: 1

  image:
    repository: hoppscotch/hoppscotch-admin
    tag: 2024.12.0
    pullPolicy: IfNotPresent

  # Service configuration
  service:
    type: ClusterIP
    port: 80
    containerPort: 3100

  ingress:
    enabled: false
    ingressClassName: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths: ["/"]
    tls: []

  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

  # extra_labels:
  #   app: "postwoman"
  #   env: "staging"